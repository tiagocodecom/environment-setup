services:
  traefik:
    restart: always
    command:
      - "--log.level=error"
      - "--api"
      - "--api.dashboard=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web_insecure.address=:80"
      - "--entrypoints.web_secure.address=:443"
      - "--entrypoints.web_secure.http.tls.domains[0].main=${PROJECT_DOMAIN_NAME}"
      - "--entrypoints.web_secure.http.tls.domains[0].sans=*.${PROJECT_DOMAIN_NAME}"
      - "--certificatesresolvers.lets_encrypt.acme.storage=/data/acme.json"
      - "--certificatesresolvers.lets_encrypt.acme.dnsChallenge=true"
      - "--certificatesresolvers.lets_encrypt.acme.dnsChallenge.delayBeforeCheck=0"
      - "--certificatesresolvers.lets_encrypt.acme.dnsChallenge.provider=cloudflare"
      - "--certificatesresolvers.lets_encrypt.acme.email=${TRAEFIK_ACME_EMAIL}"
      - "--certificatesresolvers.lets_encrypt.acme.dnsChallenge.resolvers=${TRAEFIK_CF_DNS}"
      - "--accesslog.filepath=/data/access.log"
    ports: !override
      - "80:80"
      - "443:443"
    labels: !override
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=web_secure"
      - "traefik.http.routers.traefik.tls.certresolver=lets_encrypt"
      - "traefik.http.routers.traefik.rule=Host(`${PROJECT_SUBDOMAIN_PREFIX}traefik.${PROJECT_DOMAIN_NAME}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.services.api@internal.loadbalancer.server.port=8888"
      - "traefik.http.routers.traefik.middlewares=access-auth"
      - "traefik.http.middlewares.access-auth.basicauth.realm=Login Required"
      - "traefik.http.middlewares.access-auth.basicauth.users=${TRAEFIK_USER_PASSWORD}"    
      - "traefik.http.routers.root-redirect.rule=Host(`${PROJECT_DOMAIN_NAME}`)"
      - "traefik.http.routers.root-redirect.entryPoints=web_secure"
      - "traefik.http.routers.root-redirect.tls.certresolver=lets_encrypt"
      - "traefik.http.routers.root-redirect.middlewares=redirect-to-website"
      - "traefik.http.middlewares.redirect-to-website.redirectregex.regex=^https?://${PROJECT_DOMAIN_NAME}/(.*)"
      - "traefik.http.middlewares.redirect-to-website.redirectregex.replacement=https://website.${PROJECT_DOMAIN_NAME}/$$1"
      - "traefik.http.middlewares.redirect-to-website.redirectregex.permanent=true"
  website:
    restart: always
    labels:
      - "traefik.http.routers.website.rule=Host(`${PROJECT_SUBDOMAIN_PREFIX}website.${PROJECT_DOMAIN_NAME}`) || Host(`www.${PROJECT_DOMAIN_NAME}`)"
  nginx:
    restart: always
    volumes:
      - backoffice_codebase:/var/www/html
      - backoffice_public_files:/var/www/html/web/sites/default/files:cached
      - backoffice_private_files:/var/www/html/private:cached
  backoffice:
    restart: always
    volumes:
      - backoffice_codebase:/var/www/html
      - backoffice_public_files:/var/www/html/web/sites/default/files:cached
      - backoffice_private_files:/var/www/html/private:cached
  redis:
    restart: always
    labels: !override
      - "traefik.enable=true"
      - "traefik.tcp.routers.redis.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.redis.service=redis"
      - "traefik.tcp.services.redis.loadbalancer.server.port=:6379"
  postgres: !reset []

volumes:
  postgres_data: !reset []

  backoffice_public_files:
    driver: ${DOCKER_VOLUMES_DRIVER}

  backoffice_private_files:
    driver: ${DOCKER_VOLUMES_DRIVER}